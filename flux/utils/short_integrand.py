import torch


def short_integrand(x: torch.Tensor) -> torch.Tensor:
    return (
        ((-4*torch.pow(1 + x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + x[:,2] + torch.pow(x[:,3], 2)*x[:,0]*x[:,2] + x[:,0]*x[:,3] + x[:,1]*x[:,3] + x[:,2]*x[:,3] + x[:,0]*x[:,2]*x[:,3], -2)*x[:,3])/3 - (4*torch.log(x[:,3])*torch.pow(1 + x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + x[:,2] + torch.pow(x[:,3], 2)*x[:,0]*x[:,2] + x[:,0]*x[:,3] + x[:,1]*x[:,3] + x[:,2]*x[:,3] + x[:,0]*x[:,2]*x[:,3], -2)*x[:,3])/3 + (5*torch.log(1 + torch.pow(x[:,3], 2)*x[:,0] + torch.pow(x[:,3], 2)*x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + torch.pow(x[:,3], 3)*x[:,0]*x[:,1] + x[:,3] + x[:,0]*x[:,3] + x[:,1]*x[:,3])*torch.pow(1 + x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + x[:,2] + torch.pow(x[:,3], 2)*x[:,0]*x[:,2] + x[:,0]*x[:,3] + x[:,1]*x[:,3] + x[:,2]*x[:,3] + x[:,0]*x[:,2]*x[:,3], -2)*x[:,3])/3 + (5*torch.log(x[:,3])*torch.log(1 + torch.pow(x[:,3], 2)*x[:,0] + torch.pow(x[:,3], 2)*x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + torch.pow(x[:,3], 3)*x[:,0]*x[:,1] + x[:,3] + x[:,0]*x[:,3] + x[:,1]*x[:,3])*torch.pow(1 + x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + x[:,2] + torch.pow(x[:,3], 2)*x[:,0]*x[:,2] + x[:,0]*x[:,3] + x[:,1]*x[:,3] + x[:,2]*x[:,3] + x[:,0]*x[:,2]*x[:,3], -2)*x[:,3])/3 - (4*torch.log(1 + x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + x[:,2] + torch.pow(x[:,3], 2)*x[:,0]*x[:,2] + x[:,0]*x[:,3] + x[:,1]*x[:,3] + x[:,2]*x[:,3] + x[:,0]*x[:,2]*x[:,3])*torch.pow(1 + x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + x[:,2] + torch.pow(x[:,3], 2)*x[:,0]*x[:,2] + x[:,0]*x[:,3] + x[:,1]*x[:,3] + x[:,2]*x[:,3] + x[:,0]*x[:,2]*x[:,3], -2)*x[:,3])/3 - (4*torch.log(x[:,3])*torch.log(1 + x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + x[:,2] + torch.pow(x[:,3], 2)*x[:,0]*x[:,2] + x[:,0]*x[:,3] + x[:,1]*x[:,3] + x[:,2]*x[:,3] + x[:,0]*x[:,2]*x[:,3])*torch.pow(1 + x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + x[:,2] + torch.pow(x[:,3], 2)*x[:,0]*x[:,2] + x[:,0]*x[:,3] + x[:,1]*x[:,3] + x[:,2]*x[:,3] + x[:,0]*x[:,2]*x[:,3], -2)*x[:,3])/3 + (5*torch.log(1 + torch.pow(x[:,3], 2)*x[:,0] + torch.pow(x[:,3], 2)*x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + torch.pow(x[:,3], 3)*x[:,0]*x[:,1] + x[:,3] + x[:,0]*x[:,3] + x[:,1]*x[:,3])*torch.log(1 + x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + x[:,2] + torch.pow(x[:,3], 2)*x[:,0]*x[:,2] + x[:,0]*x[:,3] + x[:,1]*x[:,3] + x[:,2]*x[:,3] + x[:,0]*x[:,2]*x[:,3])*torch.pow(1 + x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + x[:,2] + torch.pow(x[:,3], 2)*x[:,0]*x[:,2] + x[:,0]*x[:,3] + x[:,1]*x[:,3] + x[:,2]*x[:,3] + x[:,0]*x[:,2]*x[:,3], -2)*x[:,3])/3 - (2*torch.pow(torch.log(x[:,3]), 2)*torch.pow(1 + x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + x[:,2] + torch.pow(x[:,3], 2)*x[:,0]*x[:,2] + x[:,0]*x[:,3] + x[:,1]*x[:,3] + x[:,2]*x[:,3] + x[:,0]*x[:,2]*x[:,3], -2)*x[:,3])/3 - (25*torch.pow(torch.log(1 + torch.pow(x[:,3], 2)*x[:,0] + torch.pow(x[:,3], 2)*x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + torch.pow(x[:,3], 3)*x[:,0]*x[:,1] + x[:,3] + x[:,0]*x[:,3] + x[:,1]*x[:,3]), 2)*torch.pow(1 + x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + x[:,2] + torch.pow(x[:,3], 2)*x[:,0]*x[:,2] + x[:,0]*x[:,3] + x[:,1]*x[:,3] + x[:,2]*x[:,3] + x[:,0]*x[:,2]*x[:,3], -2)*x[:,3])/24 - (2*torch.pow(torch.log(1 + x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + x[:,2] + torch.pow(x[:,3], 2)*x[:,0]*x[:,2] + x[:,0]*x[:,3] + x[:,1]*x[:,3] + x[:,2]*x[:,3] + x[:,0]*x[:,2]*x[:,3]), 2)*torch.pow(1 + x[:,1] + torch.pow(x[:,3], 2)*x[:,0]*x[:,1] + x[:,2] + torch.pow(x[:,3], 2)*x[:,0]*x[:,2] + x[:,0]*x[:,3] + x[:,1]*x[:,3] + x[:,2]*x[:,3] + x[:,0]*x[:,2]*x[:,3], -2)*x[:,3])/3)/2
    )
